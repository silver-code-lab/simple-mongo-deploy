name: Deploy to EC2 (docker-compose)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write SSH private key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          test -n "$SSH_PRIVATE_KEY"
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem

      - name: Copy compose file to server
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/key.pem \
            docker-compose.prod.yml \
            ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/docker-compose.prod.yml

      - name: Install Docker on EC2 (official Docker repo â€“ idempotent)
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/key.pem ubuntu@${{ secrets.EC2_HOST }} <<'SSH'
          set -e
          if ! command -v docker >/dev/null 2>&1; then
            curl -fsSL https://get.docker.com | sh
            sudo usermod -aG docker ubuntu
          fi
          docker --version
          docker compose version || true
          SSH

      - name: Remote deploy (pin to current commit SHA)
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/key.pem ubuntu@${{ secrets.EC2_HOST }} <<'SSH'
          set -euo pipefail
          FILE=/home/ubuntu/docker-compose.prod.yml
          [ -f "$FILE" ] || { echo "compose file not found at $FILE"; exit 1; }

          # Pass the GitHub commit SHA into compose as env for image tag substitution
          export GIT_SHA='${{ github.sha }}'

          docker compose -f "$FILE" pull
          docker compose -f "$FILE" up -d
          docker compose -f "$FILE" ps
          curl -fsS http://127.0.0.1:8000/health || true
          SSH
